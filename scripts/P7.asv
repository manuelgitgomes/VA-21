%% Exercise 1
clear, clc, close all

% Defining the function
n = 1000;
xs = linspace(-4*pi, 4*pi, n);
ys = cos(xs).*exp(-abs(xs)/5);
plot(xs, ys, 'g')

% Defining neural network
hN=10; %hidden neurons
vanet = feedforwardnet(hN);

% Defining inputs
ni = 100;
rr = randperm(n, ni);
x = xs(rr);
t = ys(rr);

% Visualizing the random points
hold on
plot(x,t,'ro')

% Starting the training
% vanet.divideParam.valRatio=0;
[vanet,tr] = train(vanet,x,t);

% Showing the final points
yf = vanet(xs);
norm(yf-ys)
plot(xs, yf, 'b')

%% Exercise 2
clear, clc, close all

% Calling the neural network
net = alexnet;

% Handle to read camera
cam = webcam(1);

% Show webcam image
img = snapshot(cam);
figure(1)
hold on
ims = imshow(img);
tt = title('Original');

% Plot center
[h, w] = size(img);
coords = [round((w - 277) / 2), round((h - 277) / 2), 277, 277];
rectagnle(coords)

% Infinite cycle
while 1
    % Getting webcam image, resizing and labeling
    img = snapshot(cam);
    imgR = imresize(img, [227 227]);
    label = classify(net,imgR);

    % Visualization 
    ims.CData = img;
    tt.String = label;


end

