function [scenario, egoVehicle, sensors] = P12data()
% createDrivingScenario Returns the drivingScenario defined in the Designer

% Generated by MATLAB(R) 9.11 (R2021b) and Automated Driving Toolbox 3.4 (R2021b).
% Generated on: 20-Jan-2022 12:10:59

% Construct a drivingScenario object.
scenario = drivingScenario;
scenario.SampleTime = 0.1;

% Add all road segments
roadCenters = [10.1 0 0;
    31.4 0 0;
    39.9 0 0;
    48.6 0 0;
    62.5 0 0;
    73.5 0 0;
    83.6 0 0];
laneSpecification = lanespec(2);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');

% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [10.5 -1.8 0], ...
    'Name', 'Car');
% waypoints = [10.5 -2.2 0;
%     20.3 -2 0;
%     25.6 -1.6 0;
%     37.1 -2.7 0;
%     45.1 -5.5 0;
%     49.1 -8.9 0;
%     51.8 -14.1 0;
%     51.6 -20.4 0;
%     51.6 -23.7 0];
% speed = [30;30;30;30;30;30;30;30;30];
% smoothTrajectory(egoVehicle, waypoints, speed);

% Add the non-ego actors
car1 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [29.4 -1.9 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car1');
waypoints = [29.4 -1.9 0;
    40.7 -3.4 0;
    47.6 -8 0;
    51.4 -13.8 0;
    51.6 -19 0;
    51.8 -23.9 0];
speed = [10;10;10;10;10;10];
smoothTrajectory(car1, waypoints, speed);

car2 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [10.7 2.2 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car2');
waypoints = [10.7 2.2 0;
    33 2.4 0;
    43.8 -0.6 0;
    51 -5.1 0;
    55.6 -11 0;
    56 -18.5 0;
    56 -22.5 0;
    56 -23.9 0];
speed = [30;30;30;30;30;30;30;30];
trajectory(car2, waypoints, speed);

sensors = createSensors(scenario);

end

function sensors = createSensors(scenario)

radarPosition = [3.7 0 0.2];
radarDetectionRanges = [1 160];
radarFieldOfView = [48 5];
radarRotation = [0 0 0];

cameraPositions = [2.95 0 1.1;...
                   2.0 0.9 0.7;...
                   2.8 0.9 0.7;...
                   2.0 -0.9 0.7;...
                   2.8 -0.9 0.7];

cameraRotation = [0 1 0;0 1 65;0 1 140;0 1 -65;0 1 -140];

cameraRanges = [250 80 100 80 100];

cameraImageSize = [600 800;800 1024;720 1280;800 1024;720 1280];

cameraPrincipalPoint = [400 300;512 400;640 360;512 400;640 360];

cameraFocalLength = [900 900;400 400;720 720;400 400;720 720];

numCameras = size(cameraPositions,1);
cameras = cell(numCameras,1);
numRadars = size(radarPosition,1);
radars = cell(numRadars,1);

profiles = actorProfiles(scenario);
visionProfiles = profiles;
for i = 1:numel(visionProfiles)
    visionProfiles(i).Length = 1;
    visionProfiles(i).OriginOffset = [0.5 0 0];
end

for i = 1:numRadars
    radars{i} = drivingRadarDataGenerator('SensorIndex',i);
    radars{i}.FieldOfView = radarFieldOfView(i,:);
    radars{i}.MountingLocation = radarPosition(i,:);
    radars{i}.MountingAngles = radarRotation(i,:);
    radars{i}.RangeLimits = radarDetectionRanges(i,:);
    radars{i}.Profiles = profiles;
    radars{i}.HasRangeRate = true;
    radars{i}.DetectionCoordinates = 'Sensor spherical';
    radars{i}.HasFalseAlarms = true;
    radars{i}.FalseAlarmRate = 1e-7;
    radars{i}.HasNoise = true;
end

for i=1:numCameras
    cameras{i} = visionDetectionGenerator('SensorIndex',numRadars + i);
    intrinsics = cameraIntrinsics(cameraFocalLength(i,:),cameraPrincipalPoint(i,:),cameraImageSize(i,:));
    cameras{i}.Intrinsics = intrinsics;
    cameras{i}.SensorLocation = cameraPositions(i,1:2);
    cameras{i}.Height = cameraPositions(i,3);
    cameras{i}.Roll = cameraRotation(i,1);
    cameras{i}.Pitch = cameraRotation(i,2);
    cameras{i}.Yaw = cameraRotation(i,3);
    cameras{i}.ActorProfiles = visionProfiles;
    cameras{i}.MaxRange = cameraRanges(i);
    cameras{i}.DetectionCoordinates = 'Ego Cartesian';
    cameras{i}.MinObjectImageSize = [1 1];
    cameras{i}.HasNoise = true;
end

sensors = [radars;cameras];
% sensors = [radars];

end
